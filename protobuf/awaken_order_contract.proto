syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "acs12.proto";

option csharp_namespace = "Awaken.Contracts.Order";

service AwakenOrderContract {
  option (aelf.csharp_state) = "Awaken.Contracts.Order.AwakenOrderContractState";
  option (aelf.base) = "acs12.proto";

  rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
  }
  rpc SetAdmin (aelf.Address) returns (google.protobuf.Empty) {
  }
  rpc SetHooksContract (aelf.Address) returns (google.protobuf.Empty) {
  }
  rpc SetOrderBookConfig (SetOrderBookConfigInput) returns (google.protobuf.Empty) {
  }

  rpc CommitLimitOrder (CommitLimitOrderInput) returns (google.protobuf.Empty) {
  }
  rpc CancelLimitOrder (CancelLimitOrderInput) returns (google.protobuf.Empty) {
  }
  rpc FillLimitOrder (FillLimitOrderInput) returns (google.protobuf.Empty) {
  }
  // view
  rpc GetFillLimitOrder (GetFillLimitOrderInput) returns (GetFillLimitOrderOutput) {
    option (aelf.is_view) = true;
  }

  rpc GetFillResult (GetFillResultInput) returns (GetFillResultOutput) {
    option (aelf.is_view) = true;
  }
  
  rpc GetBestSellPrice (GetBestSellPriceInput) returns (GetBestSellPriceOutput) {
    option (aelf.is_view) = true;
  }
  
  rpc GetAdmin (google.protobuf.Empty) returns (aelf.Address) {
    option (aelf.is_view) = true;
  }
  rpc GetHooksContract (google.protobuf.Empty) returns (aelf.Address) {
    option (aelf.is_view) = true;
  }
  rpc GetOrderBookConfig (google.protobuf.Empty) returns (GetOrderBookConfigOutput) {
    option (aelf.is_view) = true;
  }
}

//Input 
message InitializeInput {
  aelf.Address hooks_contract_address = 1;
  aelf.Address admin = 2;
}

message SetOrderBookConfigInput {
   OrderBookConfig order_book_config = 1;
}

message GetOrderBookConfigOutput {
  OrderBookConfig order_book_config = 1;
}

message OrderBookConfig {
  int32 max_orders_each_order_book = 1;
  int32 max_prices_each_price_book = 2;
  int32 max_fill_order_count = 3;
  int64 price_multiple = 4;
  int64 erase_price_multiple = 5;
  int64 min_order_value_in_usdt = 6;
}

enum SideType {
  BUY = 0;
  SELL = 1;
}

message CommitLimitOrderInput {
  int64 amount_in = 1;
  string symbol_in = 2;
  int64 amount_out = 3;
  string symbol_out = 4;
  google.protobuf.Timestamp deadline = 5;
}

message CancelLimitOrderInput {
  int64 order_id = 1;
}

message FillLimitOrderInput {
  int64 amount_in = 1;
  string symbol_in = 2;
  int64 max_sell_price = 3;
  string symbol_out = 4;
  aelf.Address to = 5;
}

message GetFillLimitOrderInput {
  int64 amount_in = 1;
  string symbol_in = 2;
  int64 amount_out_min = 3;
  string symbol_out = 4;
}

message GetFillLimitOrderOutput {
  repeated UserLimitOrder fill_orders = 1;
}

message GetBestSellPriceInput {
  string symbol_in = 1;
  string symbol_out = 2;
  int64 min_price = 3; // open interval
}

message GetBestSellPriceOutput {
  int64 price = 1;
}

message GetFillResultInput {
  int64 amount_in = 1;
  string symbol_in = 2;
  string symbol_out = 3;
  int64 min_price = 4; // close interval
  int64 max_price = 5; // open interval
}

message GetFillResultOutput {
  int64 amount_in_filled = 1;
  int64 max_price_filled = 2;
  int64 amount_out_filled = 3;
  int32 order_filled_count = 4;
}


message OrderBook {
  int64 next_page_order_book_id = 1;
  repeated UserLimitOrder user_limit_orders = 2; // set maxSize
  int64 order_book_id = 3;
  string symbol_in = 4;
  string symbol_out = 5;
}

message UserLimitOrder {
  int64 amount_in = 1;
  int64 amount_out = 2;
  google.protobuf.Timestamp commit_time = 3;
  google.protobuf.Timestamp deadline = 4;
  google.protobuf.Timestamp fill_time = 5;
  aelf.Address maker = 6;
  int64 amount_in_filled = 7;
  int64 order_id = 8;
}

message PriceBook {
  int64 next_page_price_book_id = 1;
  PriceList priceList = 2;
  int64 price_book_id = 3;
}

message PriceList {
  repeated int64 prices = 1;
}

message LimitOrderCreated {
  option (aelf.is_event) = true;
  int64 amount_in = 1;
  string symbol_in = 2;
  int64 amount_out = 3;
  string symbol_out = 4;
  google.protobuf.Timestamp deadline = 5;
  google.protobuf.Timestamp commit_time = 6;
  int64 order_id = 7;
  aelf.Address maker = 8;
}

message LimitOrderFilled {
  option (aelf.is_event) = true;
  int64 order_id = 1;
  google.protobuf.Timestamp fill_time = 2;
  int64 amount_in_filled = 3;
  int64 amount_out_filled = 4;
}

message LimitOrderCancelled {
  option (aelf.is_event) = true;
  int64 order_id = 1;
  google.protobuf.Timestamp cancel_time = 2;
}

message LimitOrderRemoved {
  option (aelf.is_event) = true;
  int64 order_id = 1;
  google.protobuf.Timestamp remove_time = 2;
}